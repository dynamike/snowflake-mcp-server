apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: snowflake-mcp-ingress
  namespace: snowflake-mcp
  labels:
    app: snowflake-mcp-server
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # Enable WebSocket support
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - snowflake-mcp.example.com
    secretName: snowflake-mcp-tls
  rules:
  - host: snowflake-mcp.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: snowflake-mcp-service
            port:
              number: 8000
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: snowflake-mcp-service
            port:
              number: 8001

---
# TLS Certificate (replace with your actual certificate)
apiVersion: v1
kind: Secret
metadata:
  name: snowflake-mcp-tls
  namespace: snowflake-mcp
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and key
  # Replace with your actual certificate data
  tls.crt: LS0tLS1CRUdJTi... # Your base64 encoded certificate
  tls.key: LS0tLS1CRUdJTi... # Your base64 encoded private key